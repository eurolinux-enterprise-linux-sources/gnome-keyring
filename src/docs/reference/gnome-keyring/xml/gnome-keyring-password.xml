<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gnome-keyring-gnome-keyring-password">
<refmeta>
<refentrytitle role="top_of_page" id="gnome-keyring-gnome-keyring-password.top_of_page">Simple Password Storage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNOME-KEYRING Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Simple Password Storage</refname>
<refpurpose>Store and lookup passwords with a set of attributes.</refpurpose>
</refnamediv>

<refsynopsisdiv id="gnome-keyring-gnome-keyring-password.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link>;
extern              const GnomeKeyringPasswordSchema* <link linkend="GNOME-KEYRING-NETWORK-PASSWORD--CAPS">GNOME_KEYRING_NETWORK_PASSWORD</link>;
#define             <link linkend="GNOME-KEYRING-DEFAULT--CAPS">GNOME_KEYRING_DEFAULT</link>
#define             <link linkend="GNOME-KEYRING-SESSION--CAPS">GNOME_KEYRING_SESSION</link>
<link linkend="gpointer">gpointer</link>            <link linkend="gnome-keyring-store-password">gnome_keyring_store_password</link>        (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         const <link linkend="gchar">gchar</link> *keyring,
                                                         const <link linkend="gchar">gchar</link> *display_name,
                                                         const <link linkend="gchar">gchar</link> *password,
                                                         <link linkend="GnomeKeyringOperationDoneCallback">GnomeKeyringOperationDoneCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_data,
                                                         ...);
<link linkend="GnomeKeyringResult">GnomeKeyringResult</link>  <link linkend="gnome-keyring-store-password-sync">gnome_keyring_store_password_sync</link>   (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         const <link linkend="gchar">gchar</link> *keyring,
                                                         const <link linkend="gchar">gchar</link> *display_name,
                                                         const <link linkend="gchar">gchar</link> *password,
                                                         ...);
<link linkend="gpointer">gpointer</link>            <link linkend="gnome-keyring-find-password">gnome_keyring_find_password</link>         (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         <link linkend="GnomeKeyringOperationGetStringCallback">GnomeKeyringOperationGetStringCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_data,
                                                         ...);
<link linkend="GnomeKeyringResult">GnomeKeyringResult</link>  <link linkend="gnome-keyring-find-password-sync">gnome_keyring_find_password_sync</link>    (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         <link linkend="gchar">gchar</link> **password,
                                                         ...);
<link linkend="gpointer">gpointer</link>            <link linkend="gnome-keyring-delete-password">gnome_keyring_delete_password</link>       (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         <link linkend="GnomeKeyringOperationDoneCallback">GnomeKeyringOperationDoneCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_data,
                                                         ...);
<link linkend="GnomeKeyringResult">GnomeKeyringResult</link>  <link linkend="gnome-keyring-delete-password-sync">gnome_keyring_delete_password_sync</link>  (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         ...);
<link linkend="void">void</link>                <link linkend="gnome-keyring-free-password">gnome_keyring_free_password</link>         (<link linkend="gchar">gchar</link> *password);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gnome-keyring-gnome-keyring-password.description" role="desc">
<title role="desc.title">Description</title>
<para>
This is a simple API for storing passwords and retrieving passwords in the keyring.
</para>
<para>
Each password is associated with a set of attributes. Attribute values can be either 
strings or unsigned integers.
 
The names and types of allowed attributes for a given password are defined with a 
schema. Certain schemas are predefined such as <link linkend="GNOME-KEYRING-NETWORK-PASSWORD--CAPS"><literal>GNOME_KEYRING_NETWORK_PASSWORD</literal></link>. 
Additional schemas can be defined via the <link linkend="GnomeKeyringPasswordSchema"><literal>GnomeKeyringPasswordSchema</literal></link> structure.
</para>
<para>
Each function accepts a variable list of attributes names and their values. 
Include a <link linkend="NULL--CAPS"><literal>NULL</literal></link> to terminate the list of attributes.
</para>
<para>
<example>
<title>Passing attributes to the functions</title>
<programlisting>
  res = gnome_keyring_delete_password_sync (GNOME_KEYRING_NETWORK_PASSWORD,
                                            "user", "me",        // A string attribute
                                            "server, "example.gnome.org", 
                                            "port", "8080",      // An integer attribute
                                            NULL);
</programlisting></example></para>
<para>
</para>
</refsect1>

<refsect1 id="gnome-keyring-gnome-keyring-password.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GnomeKeyringPasswordSchema" role="struct">
<title>GnomeKeyringPasswordSchema</title>
<indexterm zone="GnomeKeyringPasswordSchema"><primary sortas="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</primary></indexterm><programlisting>typedef struct {
	GnomeKeyringItemType item_type;
	struct {
		const gchar* name;
		GnomeKeyringAttributeType type;
	} attributes[32];
} GnomeKeyringPasswordSchema;
</programlisting>
<para>
Describes a password schema. Often you'll want to use a predefined schema such 
as <link linkend="GNOME-KEYRING-NETWORK-PASSWORD--CAPS"><literal>GNOME_KEYRING_NETWORK_PASSWORD</literal></link>.
</para>
<para>
<para>
The last attribute name in a schema must be <link linkend="NULL--CAPS"><literal>NULL</literal></link>.
</para>
<para>
<programlisting>
  GnomeKeyringPasswordSchema my_schema = {
      GNOME_KEYRING_ITEM_GENERIC_SECRET,
      { 
           { "string-attr", GNOME_KEYRING_ATTRIBUTE_TYPE_STRING },
           { "uint-attr", GNOME_KEYRING_ATTRIBUTE_TYPE_UINT32 },
           { NULL, 0 }
      }
  };
</programlisting>
</para></para>
<para>
</para></refsect2>
<refsect2 id="GNOME-KEYRING-NETWORK-PASSWORD--CAPS" role="variable">
<title>GNOME_KEYRING_NETWORK_PASSWORD</title>
<indexterm zone="GNOME-KEYRING-NETWORK-PASSWORD--CAPS"><primary sortas="GNOME_KEYRING_NETWORK_PASSWORD">GNOME_KEYRING_NETWORK_PASSWORD</primary></indexterm><programlisting>extern const GnomeKeyringPasswordSchema* GNOME_KEYRING_NETWORK_PASSWORD; 
</programlisting>
<para>
<para>
A predefined schema for network paswsords. It contains the following attributes:
</para>
<itemizedlist>
<listitem>user: A string for the user login.</listitem>
<listitem>server: The server being connected to.</listitem>
<listitem>protocol: The protocol used to access the server, such as 'http' or 'smb'</listitem>
<listitem>domain: A realm or domain, such as a Windows login domain.</listitem>
<listitem>port: The network port to used to connect to the server.</listitem>
</itemizedlist></para>
<para>
</para></refsect2>
<refsect2 id="GNOME-KEYRING-DEFAULT--CAPS" role="macro">
<title>GNOME_KEYRING_DEFAULT</title>
<indexterm zone="GNOME-KEYRING-DEFAULT--CAPS"><primary sortas="GNOME_KEYRING_DEFAULT">GNOME_KEYRING_DEFAULT</primary></indexterm><programlisting>#define GNOME_KEYRING_DEFAULT   NULL
</programlisting>
<para>
<para>
The default keyring.
</para></para>
<para>
</para></refsect2>
<refsect2 id="GNOME-KEYRING-SESSION--CAPS" role="macro">
<title>GNOME_KEYRING_SESSION</title>
<indexterm zone="GNOME-KEYRING-SESSION--CAPS"><primary sortas="GNOME_KEYRING_SESSION">GNOME_KEYRING_SESSION</primary></indexterm><programlisting>#define GNOME_KEYRING_SESSION   "session"
</programlisting>
<para>
<para>
A keyring only stored in memory.
</para></para>
<para>
</para></refsect2>
<refsect2 id="gnome-keyring-store-password" role="function" condition="since:2.22">
<title>gnome_keyring_store_password ()</title>
<indexterm zone="gnome-keyring-store-password" role="2.22"><primary sortas="gnome_keyring_store_password">gnome_keyring_store_password</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            gnome_keyring_store_password        (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         const <link linkend="gchar">gchar</link> *keyring,
                                                         const <link linkend="gchar">gchar</link> *display_name,
                                                         const <link linkend="gchar">gchar</link> *password,
                                                         <link linkend="GnomeKeyringOperationDoneCallback">GnomeKeyringOperationDoneCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_data,
                                                         ...);</programlisting>
<para>
Store a password associated with a given set of attributes.
</para>
<para>
Attributes which identify this password must be passed as additional 
arguments. Attributes passed must be defined in the schema.
</para>
<para>
If a password exists in the keyring that already has all the same arguments,
then the password will be updated. 
</para>
<para>
Another more complex way to create a keyring item is using <link linkend="gnome-keyring-item-create"><function>gnome_keyring_item_create()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>schema</parameter>&#160;:</term>
<listitem><simpara> The password schema.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyring</parameter>&#160;:</term>
<listitem><simpara> The keyring to store the password in. Specify <link linkend="NULL--CAPS"><literal>NULL</literal></link> for the default keyring. 
          Use <link linkend="GNOME-KEYRING-SESSION--CAPS"><literal>GNOME_KEYRING_SESSION</literal></link> to store the password in memory only.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>display_name</parameter>&#160;:</term>
<listitem><simpara> A human readable description of what the password is for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> The password to store.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> A callback which will be called when the request completes or fails.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> A pointer to arbitrary data that will be passed to the <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy_data</parameter>&#160;:</term>
<listitem><simpara> A function to free <parameter>data</parameter> when it's no longer needed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> The variable argument list should contain pairs of a) The attribute name as a null 
      terminated string, followed by b) attribute value, either a character string, 
      or 32-bit unsigned int, as defined in the password <parameter>schema</parameter>. The list of attribtues
      should be terminated with a <link linkend="NULL--CAPS"><literal>NULL</literal></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The asychronous request, which can be passed to <link linkend="gnome-keyring-cancel-request"><function>gnome_keyring_cancel_request()</function></link>.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.22</para></refsect2>
<refsect2 id="gnome-keyring-store-password-sync" role="function" condition="since:2.22">
<title>gnome_keyring_store_password_sync ()</title>
<indexterm zone="gnome-keyring-store-password-sync" role="2.22"><primary sortas="gnome_keyring_store_password_sync">gnome_keyring_store_password_sync</primary></indexterm><programlisting><link linkend="GnomeKeyringResult">GnomeKeyringResult</link>  gnome_keyring_store_password_sync   (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         const <link linkend="gchar">gchar</link> *keyring,
                                                         const <link linkend="gchar">gchar</link> *display_name,
                                                         const <link linkend="gchar">gchar</link> *password,
                                                         ...);</programlisting>
<para>
Store a password associated with a given set of attributes.
</para>
<para>
Attributes which identify this password must be passed as additional 
arguments. Attributes passed must be defined in the schema.
</para>
<para>
This function may block for an unspecified period. If your application must
remain responsive to the user, then use <link linkend="gnome-keyring-store-password"><function>gnome_keyring_store_password()</function></link>. 
</para>
<para>
If a password exists in the keyring that already has all the same arguments,
then the password will be updated. 
</para>
<para>
Another more complex way to create a keyring item is using 
<link linkend="gnome-keyring-item-create-sync"><function>gnome_keyring_item_create_sync()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>schema</parameter>&#160;:</term>
<listitem><simpara> The password schema.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyring</parameter>&#160;:</term>
<listitem><simpara> The keyring to store the password in. Specify <link linkend="NULL--CAPS"><literal>NULL</literal></link> for the default keyring. 
          Use <link linkend="GNOME-KEYRING-SESSION--CAPS"><literal>GNOME_KEYRING_SESSION</literal></link> to store the password in memory only.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>display_name</parameter>&#160;:</term>
<listitem><simpara> A human readable description of what the password is for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> The password to store.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> The variable argument list should contain pairs of a) The attribute name as a null 
      terminated string, followed by b) attribute value, either a character string, 
      or 32-bit unsigned int, as defined in the password <parameter>schema</parameter>. The list of attribtues
      should be terminated with a <link linkend="NULL--CAPS"><literal>NULL</literal></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="GNOME-KEYRING-RESULT-OK--CAPS"><literal>GNOME_KEYRING_RESULT_OK</literal></link> if the operation was succcessful or 
an error result otherwise. 
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.22</para></refsect2>
<refsect2 id="gnome-keyring-find-password" role="function" condition="since:2.22">
<title>gnome_keyring_find_password ()</title>
<indexterm zone="gnome-keyring-find-password" role="2.22"><primary sortas="gnome_keyring_find_password">gnome_keyring_find_password</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            gnome_keyring_find_password         (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         <link linkend="GnomeKeyringOperationGetStringCallback">GnomeKeyringOperationGetStringCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_data,
                                                         ...);</programlisting>
<para>
Find a password that matches a given set of attributes.
</para>
<para>
Attributes which identify this password must be passed as additional 
arguments. Attributes passed must be defined in the schema.
</para>
<para>
The string that is passed to <parameter>callback</parameter> is automatically freed when the 
function returns.
</para>
<para>
Another more complex way to find items in the keyrings is using 
<link linkend="gnome-keyring-find-items"><function>gnome_keyring_find_items()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>schema</parameter>&#160;:</term>
<listitem><simpara> The password schema.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> A callback which will be called when the request completes or fails.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> A pointer to arbitrary data that will be passed to the <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy_data</parameter>&#160;:</term>
<listitem><simpara> A function to free <parameter>data</parameter> when it's no longer needed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> The variable argument list should contain pairs of a) The attribute name as a null 
      terminated string, followed by b) attribute value, either a character string, 
      or 32-bit unsigned int, as defined in the password <parameter>schema</parameter>. The list of attribtues
      should be terminated with a <link linkend="NULL--CAPS"><literal>NULL</literal></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The asychronous request, which can be passed to <link linkend="gnome-keyring-cancel-request"><function>gnome_keyring_cancel_request()</function></link>.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.22</para></refsect2>
<refsect2 id="gnome-keyring-find-password-sync" role="function" condition="since:2.22">
<title>gnome_keyring_find_password_sync ()</title>
<indexterm zone="gnome-keyring-find-password-sync" role="2.22"><primary sortas="gnome_keyring_find_password_sync">gnome_keyring_find_password_sync</primary></indexterm><programlisting><link linkend="GnomeKeyringResult">GnomeKeyringResult</link>  gnome_keyring_find_password_sync    (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         <link linkend="gchar">gchar</link> **password,
                                                         ...);</programlisting>
<para>
Find a password that matches a given set of attributes.
</para>
<para>
Attributes which identify this password must be passed as additional 
arguments. Attributes passed must be defined in the schema.
</para>
<para>
This function may block for an unspecified period. If your application must
remain responsive to the user, then use <link linkend="gnome-keyring-find-password"><function>gnome_keyring_find_password()</function></link>. 
</para>
<para>
Another more complex way to find items in the keyrings is using 
<link linkend="gnome-keyring-find-items-sync"><function>gnome_keyring_find_items_sync()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>schema</parameter>&#160;:</term>
<listitem><simpara> The password schema.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> An address to store password that was found. The password must 
           be freed with <link linkend="gnome-keyring-free-password"><function>gnome_keyring_free_password()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> The variable argument list should contain pairs of a) The attribute name as a null 
      terminated string, followed by b) attribute value, either a character string, 
      or 32-bit unsigned int, as defined in the password <parameter>schema</parameter>. The list of attribtues
      should be terminated with a <link linkend="NULL--CAPS"><literal>NULL</literal></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="GNOME-KEYRING-RESULT-OK--CAPS"><literal>GNOME_KEYRING_RESULT_OK</literal></link> if the operation was succcessful or 
an error result otherwise. 
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.22</para></refsect2>
<refsect2 id="gnome-keyring-delete-password" role="function" condition="since:2.22">
<title>gnome_keyring_delete_password ()</title>
<indexterm zone="gnome-keyring-delete-password" role="2.22"><primary sortas="gnome_keyring_delete_password">gnome_keyring_delete_password</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            gnome_keyring_delete_password       (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         <link linkend="GnomeKeyringOperationDoneCallback">GnomeKeyringOperationDoneCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_data,
                                                         ...);</programlisting>
<para>
Delete a password that matches a given set of attributes.
</para>
<para>
Attributes which identify this password must be passed as additional 
arguments. Attributes passed must be defined in the schema.
</para>
<para>
Another more complex way to find items in the keyrings is using 
<link linkend="gnome-keyring-item-delete"><function>gnome_keyring_item_delete()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>schema</parameter>&#160;:</term>
<listitem><simpara> The password schema.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> A callback which will be called when the request completes or fails.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> A pointer to arbitrary data that will be passed to the <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy_data</parameter>&#160;:</term>
<listitem><simpara> A function to free <parameter>data</parameter> when it's no longer needed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> The variable argument list should contain pairs of a) The attribute name as a null 
      terminated string, followed by b) attribute value, either a character string, 
      or 32-bit unsigned int, as defined in the password <parameter>schema</parameter>. The list of attribtues
      should be terminated with a <link linkend="NULL--CAPS"><literal>NULL</literal></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The asychronous request, which can be passed to <link linkend="gnome-keyring-cancel-request"><function>gnome_keyring_cancel_request()</function></link>.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.22</para></refsect2>
<refsect2 id="gnome-keyring-delete-password-sync" role="function" condition="since:2.22">
<title>gnome_keyring_delete_password_sync ()</title>
<indexterm zone="gnome-keyring-delete-password-sync" role="2.22"><primary sortas="gnome_keyring_delete_password_sync">gnome_keyring_delete_password_sync</primary></indexterm><programlisting><link linkend="GnomeKeyringResult">GnomeKeyringResult</link>  gnome_keyring_delete_password_sync  (const <link linkend="GnomeKeyringPasswordSchema">GnomeKeyringPasswordSchema</link> *schema,
                                                         ...);</programlisting>
<para>
Delete a password that matches a given set of attributes.
</para>
<para>
Attributes which identify this password must be passed as additional 
arguments. Attributes passed must be defined in the schema.
</para>
<para>
This function may block for an unspecified period. If your application must
remain responsive to the user, then use <link linkend="gnome-keyring-delete-password"><function>gnome_keyring_delete_password()</function></link>. 
</para>
<para>
Another more complex way to find items in the keyrings is using 
<link linkend="gnome-keyring-item-delete-sync"><function>gnome_keyring_item_delete_sync()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>schema</parameter>&#160;:</term>
<listitem><simpara> The password schema.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara> The variable argument list should contain pairs of a) The attribute name as a null 
      terminated string, followed by b) attribute value, either a character string, 
      or 32-bit unsigned int, as defined in the password <parameter>schema</parameter>. The list of attribtues
      should be terminated with a <link linkend="NULL--CAPS"><literal>NULL</literal></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="GNOME-KEYRING-RESULT-OK--CAPS"><literal>GNOME_KEYRING_RESULT_OK</literal></link> if the operation was succcessful or 
an error result otherwise. 
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.22</para></refsect2>
<refsect2 id="gnome-keyring-free-password" role="function">
<title>gnome_keyring_free_password ()</title>
<indexterm zone="gnome-keyring-free-password"><primary sortas="gnome_keyring_free_password">gnome_keyring_free_password</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_keyring_free_password         (<link linkend="gchar">gchar</link> *password);</programlisting>
<para>
Clears the memory used by password by filling with '\0' and frees the memory
after doing this. You should use this function instead of <link linkend="g-free"><function>g_free()</function></link> for
secret information.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> the password to be freed
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
